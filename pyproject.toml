[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "taskguard"
version = "0.2.0"
description = "ðŸ§  LLM Task Controller - Intelligent project management with local AI"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Tom Sapletta", email = "info@softreck.dev"},
]
maintainers = [
    {name = "WRONAI Team", email = "team@wronai.com"},
]
keywords = [
    "llm", "task-management", "ai", "productivity", "development",
    "best-practices", "ollama", "local-ai", "focus", "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Natural Language :: English",
]

dependencies = [
    "pyyaml>=6.0",
    "requests>=2.25.0",
    "pathlib2>=2.3.0;python_version<'3.4'",
    "typing-extensions>=4.0.0;python_version<'3.8'",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=5.0",
    "mypy>=1.0",
    "pre-commit>=2.0",
    "tox>=4.0",
]
llm = [
    "ollama-python>=0.1.0",
    "openai>=1.0.0",
    "anthropic>=0.3.0",
]
security = [
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "semgrep>=1.0.0",
]
docs = [
    "mkdocs>=1.4.0",
    "mkdocs-material>=8.0.0",
    "mkdocstrings[python]>=0.19.0",
]
all = [
    "taskguard[dev,llm,security,docs]"
]

[project.urls]
Homepage = "https://github.com/wronai/taskguard"
Documentation = "https://taskguard.readthedocs.io"
Repository = "https://github.com/wronai/taskguard.git"
"Bug Reports" = "https://github.com/wronai/taskguard/issues"
"Feature Requests" = "https://github.com/wronai/taskguard/discussions"
Changelog = "https://github.com/wronai/taskguard/blob/main/CHANGELOG.md"

[project.scripts]
taskguard = "taskguard.cli:main"
tg = "taskguard.cli:main"
llmtask = "taskguard.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["taskguard*"]

[tool.setuptools.package-data]
taskguard = [
    "config/*.yaml",
    "templates/*.md",
    "scripts/*.sh",
]

# Development tools configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["taskguard"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yaml.*",
    "requests.*",
    "ollama.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "llm: marks tests that require LLM connection",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/taskguard"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["S101"]

[tool.ruff.isort]
known-first-party = ["taskguard"]

# Documentation
[tool.mkdocs]
site_name = "TaskGuard Documentation"
site_description = "LLM Task Controller with Local AI Intelligence"
site_url = "https://taskguard.readthedocs.io"
repo_url = "https://github.com/wronai/taskguard"
repo_name = "wronai/taskguard"

# Packaging metadata
[tool.hatch.version]
path = "src/taskguard/__init__.py"

[tool.hatch.build.targets.wheel]
packages = ["src/taskguard"]